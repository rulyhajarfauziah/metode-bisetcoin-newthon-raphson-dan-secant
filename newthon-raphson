#Menyelesaikan Persamaan Non Linear x^3+x^2-3x-3 dengan Metode Newton-Raphson 
# Mengimport library yang digunakan 
import numpy as np
import matplotlib.pyplot as plt
from time import perf_counter as pc  
# Mendefinisikan fungsi dan turunannya 
 
def f(x): 
    return x**3 + x**2 - 3*x - 3 
def f_prime(x): 
    return 3*x**2 + 2*x - 3 
 
# Metode Newton-Raphson 
def newton_raphson(x0, tol=1e-6, max_iter=100): 
    print("Iterasi\t   x\t\t   f(x)") 
    nilai_x = [] 
    for i in range(max_iter): 
        fx = f(x0) 
        fpx = f_prime(x0) 
         
        if fpx == 0: 
            print("Turunan nol, metode berhenti.") 
            break 
         
        x1 = x0 - fx / fpx 
        print(f"{i+1}\t{x0:.6f}\t{fx:.6f}") 
        nilai_x.append(x1) 
         
        if abs(x1 - x0) < tol: 
            print("\nAkar ditemukan pada x =", x1) 
            return x1, nilai_x 
         
        x0 = x1 
     
    print("\nMetode tidak konvergen.") 
    return None, nilai_x 
 
# Menjalankan metode dengan tebakan awal 
akar, nilai_x = newton_raphson(3) 
 
# Visualisasi hasil 
x_vals = np.linspace(-2, 4, 400)
y_vals = f(x_vals)

plt.figure(figsize=(8, 5))
plt.plot(x_vals, y_vals, label='f(x)', color='black')
plt.axhline(0, color='gray', linestyle='--')
plt.title('Visualisasi Fungsi f(x) = x^3 + x^2 - 3x - 3')
# Titik-titik hasil Newton-Raphson
plt.scatter(nilai_x, [f(x) for x in nilai_x], color='blue', label='Newton-Raphson')
plt.legend()
plt.xlabel('x')
plt.ylabel('f(x)')
plt.grid(True)
plt.show()
