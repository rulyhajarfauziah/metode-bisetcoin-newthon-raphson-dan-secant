#Menyelesaikan Persamaan Non Linear x^3+x^2-3x-3 dengan Metode Secant
# Mengimport library yang digunakan --> PR
import numpy as np
import matplotlib.pyplot as plt
from time import perf_counter as pc
# Mendefinisikan fungsi
def f(x):
    return x**3 + x**2 - 3*x - 3
# Metode Secant
def secant(x0, x1, tol=1e-6, max_iter=100):
    print("Iterasi\t   x0\t\t   x1\t\t   x2\t\tf(x2)")
    nilai_x = []
    for i in range(max_iter):
        f0 = f(x0)
        f1 = f(x1)
        if f1 - f0 == 0:
          print("Error: karena pembagian dengan nol")
          break

        x2 = x1 - f1 * (x1 - x0) / (f1 - f0)
        f2 = f(x2)
        print(f"{i+1}\t{x0:.6f}\t{x1:.6f}\t{x2:.6f}\t{f2:.6f}")
        nilai_x.append(x2)

        if abs(f2) < tol:
          print("\nAkar ditemukan pada x =", x2)
          return x2, nilai_x
        x0, x1 = x1, x2
    print("\nMetode tidak konvergen.")
    return None, nilai_x
# Menjalankan metode dengan tebakan awal
akar, nilai_x = secant(2, 3)
# Visualisasi hasil --> PR
x_vals = np.linspace(-2, 4, 400)
y_vals = f(x_vals)

plt.figure(figsize=(9, 6))
plt.plot(x_vals, y_vals, 'k', label='f(x)')
plt.axhline(0, color='gray', linestyle='--')
plt.title('Visualisasi f(x) = x³ + x² - 3x - 3 dan Titik Iterasi')
# Secant
plt.scatter(nilai_x, [f(x) for x in nilai_x], color='green', label='Secant', zorder=5)

plt.legend()
plt.xlabel('x')
plt.ylabel('f(x)')
plt.grid(True)
plt.show()
